// Backend resolver endpoint
app.post('/api/resolve', rateLimiter(), async (req, res) => {
  const { query, type, resolver, dnssec } = req.body;
  
  try {
    const response = await resolveDns({
      question: { name: query, type },
      resolvers: [resolver],
      dnssec,
    });

    const formatted = formatResponse(response);
    res.json(formatted);
  } catch (error) {
    res.status(400).json({ 
      error: error.message,
      code: error.code 
    });
  }
});

// Example resolver using dns-packet
async function resolveDns({ question, resolvers, dnssec }) {
  const buf = dnsPacket.encode({
    type: 'query',
    id: 1,
    flags: dnssec ? dnsPacket.RECURSION_DESIRED | dnsPacket.DNSSEC_OK : dnsPacket.RECURSION_DESIRED,
    questions: [question]
  });

  const response = await fetch(`https://${resolver}/dns-query`, {
    method: 'POST',
    headers: { 'Content-Type': 'application/dns-message' },
    body: buf
  });

  return dnsPacket.decode(new Uint8Array(await response.arrayBuffer()));
}